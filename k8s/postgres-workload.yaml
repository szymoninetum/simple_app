apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
   matchLabels:
    app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: "IfNotPresent"
          ports:
          - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
      #     volumeMounts:
      #       - mountPath: /var/lib/postgresql/data
      #         name: postgredb
      # volumes:
      #   - name: postgredb
      #     persistentVolumeClaim:
      #       claimName: postgres-pv-claim
# ---
#     kind: PersistentVolume
#     apiVersion: v1
#     metadata:
#       name: postgres-pv-volume
#       labels:
#         type: local
#         app: postgres
#     spec:
#       storageClassName: manual
#       capacity:
#         storage: 5Gi
#       accessModes:
#         - ReadWriteMany
#       hostPath:
#         path: "/mnt/data"
# ---
#     kind: PersistentVolumeClaim
#     apiVersion: v1
#     metadata:
#       name: postgres-pv-claim
#       labels:
#         app: postgres
#     spec:
#       storageClassName: manual
#       accessModes:
#         - ReadWriteMany
#       resources:
#         requests:
#           storage: 5Gi
---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: postgres-config
      labels:
        app: postgres
    data:
      POSTGRES_DB: fastapi_database
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
---
    apiVersion: v1
    kind: Service
    metadata:
      name: postgres
      labels:
        app: postgres
    spec:
       ports:
        - name: postgres
          protocol: TCP
          port: 5432
          targetPort: 5432
          # nodePort: 30080
       type: NodePort
       selector:
        app: postgres