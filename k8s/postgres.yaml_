apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: app-postgres
    # tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app-postgres
        # tier: database
    spec:
      containers:
      - name: app-postgres
        image: postgres:9.6-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: app-postgres
        resources:
          # limits:
          #   memory: "128Mi"
          #   cpu: "500m"
        env:
          - configMapRef:
            name: postgres-config        
          # - name: POSTGRES_USER
          #   valueFrom:
          #       secretKeyRef:
          #         name: postgres-secret
          #         key: postgres_user
          # - name: POSTGRES_PASSWORD
          #   valueFrom:
          #       secretKeyRef:
          #         name: postgres-secret
          #         key: postgres_password
          # - name: POSTGRES_DATABASE # Setting Database Name from a 'ConfigMap'
          #   valueFrom:
          #       configMapKeyRef:
          #         name: postgres-config
          #         key: name
        volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: app-postgres
spec: 
  type: NodePort
  selector:
    app: app-postgres
    # tier: database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432